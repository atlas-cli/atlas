version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
aliases:
  - &restore-cache
    restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
  - &install-deps
    run:
        name: Install dependencies
        command: npm ci
  - &run-unit-tests
    run:
        name: Test
        command: npm run test
  - &run-integration-tests
    run:
        name: Test
        command: npm run test:integration
  - &build-packages
    run:
        name: Build
        command: npm run build:packages
  - &build-integration
    run:
        name: Build
        command: npm run build:integration
  - &deploy-integration-tests
    run:
        name: Deploy integration tests
        command: npm run deploy
  - &destroy-integration-tests
    run:
        name: Destroy integration tests
        command: npm run destroy

unit-tests-template: &unit-tests-template
  working_directory: ~/atlas
  steps:
    - checkout
    - *restore-cache
    - *install-deps
    - *build-packages
    - *run-unit-tests

jobs:
  build:
    working_directory: ~/atlas
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Update NPM version
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build
          command: npm run build
        
  test_node_12:
    <<: *unit-tests-template
    docker:
      - image: circleci/node:12

  test_node_14:
    <<: *unit-tests-template
    docker:
      - image: circleci/node:14
    
  test_node_16:
    working_directory: ~/atlas
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-cache
      - *install-deps
      - *build-packages
      - *run-unit-tests
      - run:
          name: Collect coverage
          command: npm run coverage
      - store_artifacts:
          path: coverage

  lint:
    working_directory: ~/atlas
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-cache
      - *install-deps
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Lint commit
          command: ./node_modules/.bin/commitlint-circle -c .commitlintrc.json
  integration_tests:
    working_directory: ~/atlas
    executor: aws-cli/default
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_ACCESS_SECRET
          aws-region: AWS_REGION_NAME
      - *restore-cache
      - *install-deps
      - *build-integration
      - *deploy-integration-tests
      - *run-integration-tests
      - *destroy-integration-tests
workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test_node_16:
          requires:
            - build
      - test_node_14:
          requires:
            - build
      - test_node_12:
          requires:
            - build
      - lint:
          requires:
            - build
      - integration_tests:
          requires:
            - build
      # - samples:
      #     requires:
      #       - build